{"version":3,"file":"server.js","sourceRoot":"","sources":["../../../../../modules/@angular/platform-server/src/server.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {PlatformLocation} from '@angular/common';\nimport {analyzeAppProvidersForDeprecatedConfiguration, platformCoreDynamic} from '@angular/compiler';\nimport {ApplicationRef, CompilerFactory, ComponentRef, NgModule, OpaqueToken, PLATFORM_COMMON_PROVIDERS, PLATFORM_INITIALIZER, PlatformRef, ReflectiveInjector, Type, assertPlatform, createPlatform, createPlatformFactory, getPlatform, platformCore} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\n\nimport {Console, ReflectionCapabilities, reflector, wtfInit} from '../core_private';\n\nimport {ConcreteType} from './facade/lang';\nimport {Parse5DomAdapter} from './parse5_adapter';\n\nfunction notSupported(feature: string): Error {\n  throw new Error(`platform-server does not support '${feature}'.`);\n}\n\nclass ServerPlatformLocation extends PlatformLocation {\n  getBaseHrefFromDOM(): string { throw notSupported('getBaseHrefFromDOM'); };\n  onPopState(fn: any): void { notSupported('onPopState'); };\n  onHashChange(fn: any): void { notSupported('onHashChange'); };\n  get pathname(): string { throw notSupported('pathname'); }\n  get search(): string { throw notSupported('search'); }\n  get hash(): string { throw notSupported('hash'); }\n  replaceState(state: any, title: string, url: string): void { notSupported('replaceState'); };\n  pushState(state: any, title: string, url: string): void { notSupported('pushState'); };\n  forward(): void { notSupported('forward'); };\n  back(): void { notSupported('back'); };\n}\n\nexport const INTERNAL_SERVER_PLATFORM_PROVIDERS: Array<any /*Type | Provider | any[]*/> = [\n  {provide: PLATFORM_INITIALIZER, useValue: initParse5Adapter, multi: true},\n  {provide: PlatformLocation, useClass: ServerPlatformLocation},\n];\n\n\n/**\n * A set of providers to initialize the Angular platform in a server.\n *\n * Used automatically by `serverBootstrap`, or can be passed to `platform`.\n * @deprecated Use `platformServer()` or create a custom platform factory via\n * `createPlatformFactory(platformServer, ...)`\n */\nexport const SERVER_PLATFORM_PROVIDERS: Array<any /*Type | Provider | any[]*/> =\n    [PLATFORM_COMMON_PROVIDERS, INTERNAL_SERVER_PLATFORM_PROVIDERS];\n\nfunction initParse5Adapter() {\n  Parse5DomAdapter.makeCurrent();\n  wtfInit();\n}\n\n/**\n * @experimental\n */\nexport const platformServer =\n    createPlatformFactory(platformCore, 'server', INTERNAL_SERVER_PLATFORM_PROVIDERS);\n\n/**\n * @deprecated Use {@link platformServer} instead\n */\nexport const serverPlatform = platformServer;\n\n/**\n * The server platform that supports the runtime compiler.\n *\n * @experimental\n */\nexport const platformDynamicServer =\n    createPlatformFactory(platformCoreDynamic, 'serverDynamic', INTERNAL_SERVER_PLATFORM_PROVIDERS);\n\n/**\n * @deprecated Use {@link platformDynamicServer} instead\n */\nexport const serverDynamicPlatform = platformDynamicServer;\n\n/**\n * Used to bootstrap Angular in server environment (such as node).\n *\n * This version of bootstrap only creates platform injector and does not define anything for\n * application injector. It is expected that application providers are imported from other\n * packages such as `@angular/platform-browser` or `@angular/platform-browser-dynamic`.\n *\n * ```\n * import {BROWSER_APP_PROVIDERS} from '@angular/platform-browser';\n * import {BROWSER_APP_COMPILER_PROVIDERS} from '@angular/platform-browser-dynamic';\n *\n * serverBootstrap(..., [BROWSER_APP_PROVIDERS, BROWSER_APP_COMPILER_PROVIDERS])\n * ```\n *\n * @deprecated create an {@link NgModule} and use {@link bootstrapModule} with the {@link\n * serverDynamicPlatform}()\n * instead.\n */\nexport function serverBootstrap<T>(\n    appComponentType: ConcreteType<T>,\n    customProviders: Array<any /*Type | Provider | any[]*/>): Promise<ComponentRef<T>> {\n  console.warn(\n      'serverBootstrap is deprecated. Create an @NgModule and use `bootstrapModule` with the `serverDynamicPlatform()` instead.');\n  reflector.reflectionCapabilities = new ReflectionCapabilities();\n\n  const deprecatedConfiguration = analyzeAppProvidersForDeprecatedConfiguration(customProviders);\n  const declarations = [deprecatedConfiguration.moduleDeclarations.concat([appComponentType])];\n  class DynamicModule {\n  /** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    providers: customProviders,\n    declarations: declarations,\n    imports: [BrowserModule],\n    bootstrap: [appComponentType]\n  }, ] },\n];\n}\n\n  return platformDynamicServer()\n      .bootstrapModule(DynamicModule, deprecatedConfiguration.compilerOptions)\n      .then((moduleRef) => {\n        const console = moduleRef.injector.get(Console);\n        deprecatedConfiguration.deprecationMessages.forEach((msg) => console.warn(msg));\n        const appRef: ApplicationRef = moduleRef.injector.get(ApplicationRef);\n        return appRef.components[0];\n      });\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}